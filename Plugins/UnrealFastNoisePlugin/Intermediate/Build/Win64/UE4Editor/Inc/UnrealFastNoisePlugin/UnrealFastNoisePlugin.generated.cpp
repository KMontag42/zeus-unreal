// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/UnrealFastNoisePlugin.h"
#include "GeneratedCppIncludes.h"
#include "UnrealFastNoisePlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1UnrealFastNoisePlugin() {}
	void UUFNNoiseGenerator::StaticRegisterNativesUUFNNoiseGenerator()
	{
		FNativeFunctionRegistrar::RegisterFunction(UUFNNoiseGenerator::StaticClass(), "GetNoise2D",(Native)&UUFNNoiseGenerator::execGetNoise2D);
		FNativeFunctionRegistrar::RegisterFunction(UUFNNoiseGenerator::StaticClass(), "GetNoise3D",(Native)&UUFNNoiseGenerator::execGetNoise3D);
	}
	IMPLEMENT_CLASS(UUFNNoiseGenerator, 3934129776);
static class UEnum* ESelectInterpType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("ESelectInterpType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESelectInterpType(ESelectInterpType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("ESelectInterpType"), false, nullptr, nullptr);
static class UEnum* EPositionWarpType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("EPositionWarpType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPositionWarpType(EPositionWarpType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("EPositionWarpType"), false, nullptr, nullptr);
static class UEnum* ECellularReturnType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("ECellularReturnType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECellularReturnType(ECellularReturnType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("ECellularReturnType"), false, nullptr, nullptr);
static class UEnum* ECellularDistanceFunction_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("ECellularDistanceFunction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECellularDistanceFunction(ECellularDistanceFunction_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("ECellularDistanceFunction"), false, nullptr, nullptr);
static class UEnum* EFractalType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("EFractalType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFractalType(EFractalType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("EFractalType"), false, nullptr, nullptr);
static class UEnum* EInterp_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("EInterp"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInterp(EInterp_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("EInterp"), false, nullptr, nullptr);
static class UEnum* EFractalNoiseType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("EFractalNoiseType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFractalNoiseType(EFractalNoiseType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("EFractalNoiseType"), false, nullptr, nullptr);
static class UEnum* ESimpleNoiseType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("ESimpleNoiseType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESimpleNoiseType(ESimpleNoiseType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("ESimpleNoiseType"), false, nullptr, nullptr);
static class UEnum* ENoiseType_StaticEnum()
{
	extern UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType, Z_Construct_UPackage__Script_UnrealFastNoisePlugin(), TEXT("ENoiseType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENoiseType(ENoiseType_StaticEnum, TEXT("/Script/UnrealFastNoisePlugin"), TEXT("ENoiseType"), false, nullptr, nullptr);
	void UFastNoise::StaticRegisterNativesUFastNoise()
	{
	}
	IMPLEMENT_CLASS(UFastNoise, 2389485423);
	void UUFNBlueprintFunctionLibrary::StaticRegisterNativesUUFNBlueprintFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "Create3SelectModule",(Native)&UUFNBlueprintFunctionLibrary::execCreate3SelectModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateAddModule",(Native)&UUFNBlueprintFunctionLibrary::execCreateAddModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateBlendModule",(Native)&UUFNBlueprintFunctionLibrary::execCreateBlendModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateCellularNoiseGenerator",(Native)&UUFNBlueprintFunctionLibrary::execCreateCellularNoiseGenerator);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateConstantModule",(Native)&UUFNBlueprintFunctionLibrary::execCreateConstantModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateFractalNoiseGenerator",(Native)&UUFNBlueprintFunctionLibrary::execCreateFractalNoiseGenerator);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateNoiseGenerator",(Native)&UUFNBlueprintFunctionLibrary::execCreateNoiseGenerator);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateScaleBiasModule",(Native)&UUFNBlueprintFunctionLibrary::execCreateScaleBiasModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateSelectModule",(Native)&UUFNBlueprintFunctionLibrary::execCreateSelectModule);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateSimpleNoiseGenerator",(Native)&UUFNBlueprintFunctionLibrary::execCreateSimpleNoiseGenerator);
		FNativeFunctionRegistrar::RegisterFunction(UUFNBlueprintFunctionLibrary::StaticClass(), "CreateSplineGenerator",(Native)&UUFNBlueprintFunctionLibrary::execCreateSplineGenerator);
	}
	IMPLEMENT_CLASS(UUFNBlueprintFunctionLibrary, 3354434383);
	void UUFN3SelectModule::StaticRegisterNativesUUFN3SelectModule()
	{
	}
	IMPLEMENT_CLASS(UUFN3SelectModule, 1391282478);
	void UUFNAddModule::StaticRegisterNativesUUFNAddModule()
	{
	}
	IMPLEMENT_CLASS(UUFNAddModule, 3859348106);
	void UUFNBlendModule::StaticRegisterNativesUUFNBlendModule()
	{
	}
	IMPLEMENT_CLASS(UUFNBlendModule, 3604362872);
	void UUFNConstantModule::StaticRegisterNativesUUFNConstantModule()
	{
	}
	IMPLEMENT_CLASS(UUFNConstantModule, 1899622926);
	void UUFNScaleBiasModule::StaticRegisterNativesUUFNScaleBiasModule()
	{
	}
	IMPLEMENT_CLASS(UUFNScaleBiasModule, 1749895260);
	void UUFNSelectModule::StaticRegisterNativesUUFNSelectModule()
	{
	}
	IMPLEMENT_CLASS(UUFNSelectModule, 906684521);
	void UUFNSplineGenerator::StaticRegisterNativesUUFNSplineGenerator()
	{
		FNativeFunctionRegistrar::RegisterFunction(UUFNSplineGenerator::StaticClass(), "AddSpline",(Native)&UUFNSplineGenerator::execAddSpline);
	}
	IMPLEMENT_CLASS(UUFNSplineGenerator, 2329050663);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveFloat_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USplineComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise2D();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise3D();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNNoiseGenerator_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNNoiseGenerator();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType();
	UNREALFASTNOISEPLUGIN_API class UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UFastNoise_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UFastNoise();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_Create3SelectModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateAddModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateBlendModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateCellularNoiseGenerator();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateConstantModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateFractalNoiseGenerator();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateNoiseGenerator();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateScaleBiasModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSelectModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSimpleNoiseGenerator();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSplineGenerator();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNBlueprintFunctionLibrary_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFN3SelectModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFN3SelectModule();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNAddModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNAddModule();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNBlendModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNBlendModule();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNConstantModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNConstantModule();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNScaleBiasModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNScaleBiasModule();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNSelectModule_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNSelectModule();
	UNREALFASTNOISEPLUGIN_API class UFunction* Z_Construct_UFunction_UUFNSplineGenerator_AddSpline();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNSplineGenerator_NoRegister();
	UNREALFASTNOISEPLUGIN_API class UClass* Z_Construct_UClass_UUFNSplineGenerator();
	UNREALFASTNOISEPLUGIN_API class UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
	UFunction* Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise2D()
	{
		struct UFNNoiseGenerator_eventGetNoise2D_Parms
		{
			float aX;
			float aY;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNNoiseGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNoise2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(UFNNoiseGenerator_eventGetNoise2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, UFNNoiseGenerator_eventGetNoise2D_Parms), 0x0010000000000580);
			UProperty* NewProp_aY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(aY, UFNNoiseGenerator_eventGetNoise2D_Parms), 0x0010000000000080);
			UProperty* NewProp_aX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(aX, UFNNoiseGenerator_eventGetNoise2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNNoiseGenerator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise3D()
	{
		struct UFNNoiseGenerator_eventGetNoise3D_Parms
		{
			float aX;
			float aY;
			float aZ;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNNoiseGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNoise3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(UFNNoiseGenerator_eventGetNoise3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, UFNNoiseGenerator_eventGetNoise3D_Parms), 0x0010000000000580);
			UProperty* NewProp_aZ = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aZ"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(aZ, UFNNoiseGenerator_eventGetNoise3D_Parms), 0x0010000000000080);
			UProperty* NewProp_aY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aY"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(aY, UFNNoiseGenerator_eventGetNoise3D_Parms), 0x0010000000000080);
			UProperty* NewProp_aX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("aX"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(aX, UFNNoiseGenerator_eventGetNoise3D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNNoiseGenerator.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UUFNNoiseGenerator_NoRegister()
	{
		return UUFNNoiseGenerator::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNNoiseGenerator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNNoiseGenerator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise2D());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise3D());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise2D(), "GetNoise2D"); // 3050314908
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNNoiseGenerator_GetNoise3D(), "GetNoise3D"); // 2275874978
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNNoiseGenerator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNNoiseGenerator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNNoiseGenerator(Z_Construct_UClass_UUFNNoiseGenerator, &UUFNNoiseGenerator::StaticClass, TEXT("UUFNNoiseGenerator"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNNoiseGenerator);
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESelectInterpType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESelectInterpType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::CircularIn")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::CircularOut")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::CircularInOut")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::ExponentialIn")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::ExponentialOut")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::ExponentialInOut")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::SineIn")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::SineOut")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::SineInOut")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::Step")), 10));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESelectInterpType::ESelectInterpType_MAX")), 11));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESelectInterpType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType_CRC() { return 1382886317U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EPositionWarpType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPositionWarpType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Regular")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Fractal")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EPositionWarpType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EPositionWarpType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType_CRC() { return 1132320922U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECellularReturnType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECellularReturnType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("CellValue")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NoiseLookup")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Add")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Sub")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Mul")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Distance2Div")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECellularReturnType_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECellularReturnType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType_CRC() { return 1694621815U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECellularDistanceFunction"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECellularDistanceFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Euclidean")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Manhattan")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Natural")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ECellularDistanceFunction_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECellularDistanceFunction");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction_CRC() { return 99607427U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EFractalType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFractalType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FBM")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Billow")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("RigidMulti")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EFractalType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType_CRC() { return 2164101862U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EInterp"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EInterp"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInterp::InterpLinear")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInterp::InterpHermite")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInterp::InterpQuintic")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInterp::EInterp_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EInterp");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("InterpHermite.DisplayName"), TEXT("Hermite"));
			MetaData->SetValue(ReturnEnum, TEXT("InterpLinear.DisplayName"), TEXT("Linear"));
			MetaData->SetValue(ReturnEnum, TEXT("InterpQuintic.DisplayName"), TEXT("Quintic"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp_CRC() { return 3298977236U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EFractalNoiseType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFractalNoiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalNoiseType::FractalValue")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalNoiseType::FractalGradient")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalNoiseType::FractalSimplex")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EFractalNoiseType::EFractalNoiseType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EFractalNoiseType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("FractalGradient.DisplayName"), TEXT("Gradient"));
			MetaData->SetValue(ReturnEnum, TEXT("FractalSimplex.DisplayName"), TEXT("Simplex"));
			MetaData->SetValue(ReturnEnum, TEXT("FractalValue.DisplayName"), TEXT("Value"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType_CRC() { return 754809048U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESimpleNoiseType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESimpleNoiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESimpleNoiseType::SimpleValue")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESimpleNoiseType::SimpleGradient")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESimpleNoiseType::SimpleSimplex")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESimpleNoiseType::SimpleWhiteNoise")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESimpleNoiseType::ESimpleNoiseType_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESimpleNoiseType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SimpleGradient.DisplayName"), TEXT("Gradient"));
			MetaData->SetValue(ReturnEnum, TEXT("SimpleSimplex.DisplayName"), TEXT("Simplex"));
			MetaData->SetValue(ReturnEnum, TEXT("SimpleValue.DisplayName"), TEXT("Value"));
			MetaData->SetValue(ReturnEnum, TEXT("SimpleWhiteNoise.DisplayName"), TEXT("WhiteNoise"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType_CRC() { return 4214235784U; }
	UEnum* Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
		extern uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENoiseType"), 0, Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENoiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::Value")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::ValueFractal")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::Gradient")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::GradientFractal")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::Simplex")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::SimplexFractal")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::Cellular")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::WhiteNoise")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ENoiseType::ENoiseType_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ENoiseType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType_CRC() { return 1309654951U; }
	UClass* Z_Construct_UClass_UFastNoise_NoRegister()
	{
		return UFastNoise::StaticClass();
	}
	UClass* Z_Construct_UClass_UFastNoise()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UFastNoise::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("FastNoise/FastNoise.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/FastNoise/FastNoise.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFastNoise(Z_Construct_UClass_UFastNoise, &UFastNoise::StaticClass, TEXT("UFastNoise"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFastNoise);
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_Create3SelectModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms
		{
			UObject* outer;
			UUFNNoiseGenerator* inputModule1;
			UUFNNoiseGenerator* inputModule2;
			UUFNNoiseGenerator* inputModule3;
			UUFNNoiseGenerator* selectModule;
			float lowerThreshold;
			float upperThreshold;
			ESelectInterpType interpolationType;
			float falloff;
			int32 steps;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Create3SelectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_steps = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("steps"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(steps, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_falloff = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("falloff"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(falloff, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_interpolationType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("interpolationType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(interpolationType, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType());
			UProperty* NewProp_upperThreshold = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("upperThreshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(upperThreshold, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_lowerThreshold = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lowerThreshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lowerThreshold, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule3 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule3"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule3, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreate3SelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_falloff"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_interpolationType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_lowerThreshold"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_steps"), TEXT("4"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_upperThreshold"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Select module. Returns a value either from input1 or input 2 or input 3, depending on the value returned from the select module."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateAddModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms
		{
			UObject* outer;
			UUFNNoiseGenerator* inputModule1;
			UUFNNoiseGenerator* inputModule2;
			UUFNNoiseGenerator* maskModule;
			float threshold;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateAddModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_threshold = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("threshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(threshold, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000080);
			UProperty* NewProp_maskModule = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("maskModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(maskModule, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateAddModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_threshold"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates an Add module. Adds two modules together, clamping the result and optionally accepting a third module as a mask with threshold"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateBlendModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms
		{
			UObject* outer;
			UUFNNoiseGenerator* inputModule1;
			UUFNNoiseGenerator* inputModule2;
			UUFNNoiseGenerator* selectModule;
			UCurveFloat* blendCurve;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateBlendModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_blendCurve = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("blendCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(blendCurve, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000080, Z_Construct_UClass_UCurveFloat_NoRegister());
			UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateBlendModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates Blend modules. Returns a blended value from input1 and input 2, based on the value returned from the select module. Blend range is from -1.0 to 1.0;"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateCellularNoiseGenerator()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms
		{
			UObject* outer;
			int32 seed;
			float frequency;
			TEnumAsByte<ECellularDistanceFunction> cellularDistanceFunction;
			TEnumAsByte<ECellularReturnType> cellularReturnType;
			TEnumAsByte<EPositionWarpType> positionWarpType;
			float positionWarpAmplitude;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateCellularNoiseGenerator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_positionWarpAmplitude = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpAmplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(positionWarpAmplitude, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_positionWarpType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(positionWarpType, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType());
			UProperty* NewProp_cellularReturnType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("cellularReturnType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(cellularReturnType, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType());
			UProperty* NewProp_cellularDistanceFunction = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("cellularDistanceFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(cellularDistanceFunction, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction());
			UProperty* NewProp_frequency = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frequency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(frequency, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_seed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(seed, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateCellularNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_cellularDistanceFunction"), TEXT("Euclidean"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_cellularReturnType"), TEXT("CellValue"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_frequency"), TEXT("0.100000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpAmplitude"), TEXT("30.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_seed"), TEXT("12345"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Cellular (Voronoi) noise module"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateConstantModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateConstantModule_Parms
		{
			UObject* outer;
			float constantValue;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateConstantModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateConstantModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateConstantModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_constantValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("constantValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(constantValue, UFNBlueprintFunctionLibrary_eventCreateConstantModule_Parms), 0x0010000000000080);
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateConstantModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Constant modules. Returns a constant value"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateFractalNoiseGenerator()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms
		{
			UObject* outer;
			EFractalNoiseType noiseType;
			int32 seed;
			float frequency;
			float fractalGain;
			EInterp interpolation;
			TEnumAsByte<EFractalType> fractalType;
			int32 octaves;
			float lacunarity;
			TEnumAsByte<EPositionWarpType> positionWarpType;
			float positionWarpAmplitude;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateFractalNoiseGenerator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_positionWarpAmplitude = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpAmplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(positionWarpAmplitude, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_positionWarpType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(positionWarpType, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType());
			UProperty* NewProp_lacunarity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lacunarity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lacunarity, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_octaves = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("octaves"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(octaves, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_fractalType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fractalType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(fractalType, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType());
			UProperty* NewProp_interpolation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("interpolation"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(interpolation, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp());
			UProperty* NewProp_fractalGain = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fractalGain"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(fractalGain, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_frequency = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frequency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(frequency, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_seed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(seed, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_noiseType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("noiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(noiseType, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalNoiseType());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateFractalNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_fractalGain"), TEXT("0.500000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_fractalType"), TEXT("Billow"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_frequency"), TEXT("0.100000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_interpolation"), TEXT("InterpLinear"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_lacunarity"), TEXT("2.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_octaves"), TEXT("4"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpAmplitude"), TEXT("30.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_seed"), TEXT("12345"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Fractal noise module"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateNoiseGenerator()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms
		{
			UObject* outer;
			ENoiseType noiseType;
			TEnumAsByte<ECellularDistanceFunction> cellularDistanceFunction;
			TEnumAsByte<ECellularReturnType> cellularReturnType;
			TEnumAsByte<EFractalType> fractalType;
			EInterp interpolation;
			int32 seed;
			int32 octaves;
			float frequency;
			float lacunarity;
			float fractalGain;
			TEnumAsByte<EPositionWarpType> positionWarpType;
			float positionWarpAmplitude;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateNoiseGenerator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_positionWarpAmplitude = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpAmplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(positionWarpAmplitude, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_positionWarpType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(positionWarpType, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType());
			UProperty* NewProp_fractalGain = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fractalGain"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(fractalGain, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_lacunarity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lacunarity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lacunarity, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_frequency = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frequency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(frequency, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_octaves = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("octaves"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(octaves, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_seed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(seed, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_interpolation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("interpolation"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(interpolation, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp());
			UProperty* NewProp_fractalType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fractalType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(fractalType, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EFractalType());
			UProperty* NewProp_cellularReturnType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("cellularReturnType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(cellularReturnType, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularReturnType());
			UProperty* NewProp_cellularDistanceFunction = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("cellularDistanceFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(cellularDistanceFunction, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ECellularDistanceFunction());
			UProperty* NewProp_noiseType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("noiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(noiseType, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ENoiseType());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_fractalGain"), TEXT("0.500000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_frequency"), TEXT("0.001000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_lacunarity"), TEXT("2.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_octaves"), TEXT("4"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpAmplitude"), TEXT("45.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_seed"), TEXT("1337"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a new noise generator module. Note that not all parameters may be relevant e.g. Fractal noise types will ignore Cellular parameters"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateScaleBiasModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms
		{
			UObject* outer;
			UUFNNoiseGenerator* inputModule;
			float scale;
			float bias;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateScaleBiasModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_bias = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bias"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(bias, UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms), 0x0010000000000080);
			UProperty* NewProp_scale = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("scale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(scale, UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms), 0x0010000000000080);
			UProperty* NewProp_inputModule = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule, UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateScaleBiasModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bias"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_scale"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Scale/Bias modules. Applies a multiplier, and or additive value to the value returned from the input"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSelectModule()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms
		{
			UObject* outer;
			UUFNNoiseGenerator* inputModule1;
			UUFNNoiseGenerator* inputModule2;
			UUFNNoiseGenerator* selectModule;
			ESelectInterpType interpolationType;
			float falloff;
			float threshold;
			int32 steps;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateSelectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_steps = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("steps"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(steps, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_threshold = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("threshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(threshold, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_falloff = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("falloff"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(falloff, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080);
			UProperty* NewProp_interpolationType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("interpolationType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(interpolationType, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ESelectInterpType());
			UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateSelectModule_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_falloff"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_interpolationType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_steps"), TEXT("4"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_threshold"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a Select module. Returns a value either from input1 or input 2, depending on the value returned from the select module. Has sine in/out smooth falloff option (may be wonky)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSimpleNoiseGenerator()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms
		{
			UObject* outer;
			ESimpleNoiseType noiseType;
			int32 seed;
			float frequency;
			EInterp interpolation;
			TEnumAsByte<EPositionWarpType> positionWarpType;
			float positionWarpAmplitude;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateSimpleNoiseGenerator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_positionWarpAmplitude = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpAmplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(positionWarpAmplitude, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_positionWarpType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("positionWarpType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(positionWarpType, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EPositionWarpType());
			UProperty* NewProp_interpolation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("interpolation"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(interpolation, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_EInterp());
			UProperty* NewProp_frequency = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frequency"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(frequency, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_seed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(seed, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_noiseType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("noiseType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(noiseType, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UEnum_UnrealFastNoisePlugin_ESimpleNoiseType());
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateSimpleNoiseGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_frequency"), TEXT("0.100000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_interpolation"), TEXT("InterpLinear"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpAmplitude"), TEXT("30.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_positionWarpType"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_seed"), TEXT("12345"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a simple (non-fractal) noise module"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSplineGenerator()
	{
		struct UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms
		{
			UObject* outer;
			float MaxDistance;
			float MinDistance;
			TArray<USplineComponent*> Splines;
			UCurveFloat* falloffCurve;
			UUFNNoiseGenerator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UUFNBlueprintFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateSplineGenerator"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010000000000580, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
			UProperty* NewProp_falloffCurve = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("falloffCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(falloffCurve, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UCurveFloat_NoRegister());
			UProperty* NewProp_Splines = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Splines"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Splines, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010008000000080);
			UProperty* NewProp_Splines_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Splines, TEXT("Splines"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080000, Z_Construct_UClass_USplineComponent_NoRegister());
			UProperty* NewProp_MinDistance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MinDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinDistance, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_MaxDistance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxDistance, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010000000000080);
			UProperty* NewProp_outer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(outer, UFNBlueprintFunctionLibrary_eventCreateSplineGenerator_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("UnrealFastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Creates a spline module."));
			MetaData->SetValue(NewProp_Splines, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UUFNBlueprintFunctionLibrary_NoRegister()
	{
		return UUFNBlueprintFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNBlueprintFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNBlueprintFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_Create3SelectModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateAddModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateBlendModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateCellularNoiseGenerator());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateConstantModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateFractalNoiseGenerator());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateNoiseGenerator());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateScaleBiasModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSelectModule());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSimpleNoiseGenerator());
				OuterClass->LinkChild(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSplineGenerator());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_Create3SelectModule(), "Create3SelectModule"); // 1062853475
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateAddModule(), "CreateAddModule"); // 3369580693
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateBlendModule(), "CreateBlendModule"); // 780702861
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateCellularNoiseGenerator(), "CreateCellularNoiseGenerator"); // 2208275826
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateConstantModule(), "CreateConstantModule"); // 2200312581
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateFractalNoiseGenerator(), "CreateFractalNoiseGenerator"); // 1424559234
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateNoiseGenerator(), "CreateNoiseGenerator"); // 110505978
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateScaleBiasModule(), "CreateScaleBiasModule"); // 495950848
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSelectModule(), "CreateSelectModule"); // 1486428972
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSimpleNoiseGenerator(), "CreateSimpleNoiseGenerator"); // 1890110357
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNBlueprintFunctionLibrary_CreateSplineGenerator(), "CreateSplineGenerator"); // 2762023252
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNBlueprintFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlueprintFunctionLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNBlueprintFunctionLibrary(Z_Construct_UClass_UUFNBlueprintFunctionLibrary, &UUFNBlueprintFunctionLibrary::StaticClass, TEXT("UUFNBlueprintFunctionLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNBlueprintFunctionLibrary);
	UClass* Z_Construct_UClass_UUFN3SelectModule_NoRegister()
	{
		return UUFN3SelectModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFN3SelectModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFN3SelectModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UUFN3SelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule3 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule3"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule3, UUFN3SelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UUFN3SelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UUFN3SelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFN3SelectModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFN3SelectModule.h"));
				MetaData->SetValue(NewProp_selectModule, TEXT("ModuleRelativePath"), TEXT("Public/UFN3SelectModule.h"));
				MetaData->SetValue(NewProp_inputModule3, TEXT("ModuleRelativePath"), TEXT("Public/UFN3SelectModule.h"));
				MetaData->SetValue(NewProp_inputModule2, TEXT("ModuleRelativePath"), TEXT("Public/UFN3SelectModule.h"));
				MetaData->SetValue(NewProp_inputModule1, TEXT("ModuleRelativePath"), TEXT("Public/UFN3SelectModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFN3SelectModule(Z_Construct_UClass_UUFN3SelectModule, &UUFN3SelectModule::StaticClass, TEXT("UUFN3SelectModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFN3SelectModule);
	UClass* Z_Construct_UClass_UUFNAddModule_NoRegister()
	{
		return UUFNAddModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNAddModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNAddModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_maskModule = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maskModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(maskModule, UUFNAddModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UUFNAddModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UUFNAddModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNAddModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNAddModule.h"));
				MetaData->SetValue(NewProp_maskModule, TEXT("ModuleRelativePath"), TEXT("Public/UFNAddModule.h"));
				MetaData->SetValue(NewProp_inputModule2, TEXT("ModuleRelativePath"), TEXT("Public/UFNAddModule.h"));
				MetaData->SetValue(NewProp_inputModule1, TEXT("ModuleRelativePath"), TEXT("Public/UFNAddModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNAddModule(Z_Construct_UClass_UUFNAddModule, &UUFNAddModule::StaticClass, TEXT("UUFNAddModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNAddModule);
	UClass* Z_Construct_UClass_UUFNBlendModule_NoRegister()
	{
		return UUFNBlendModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNBlendModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNBlendModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_blendCurve = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("blendCurve"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(blendCurve, UUFNBlendModule), 0x0010000000000000, Z_Construct_UClass_UCurveFloat_NoRegister());
				UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UUFNBlendModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UUFNBlendModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UUFNBlendModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNBlendModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlendModule.h"));
				MetaData->SetValue(NewProp_blendCurve, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlendModule.h"));
				MetaData->SetValue(NewProp_selectModule, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlendModule.h"));
				MetaData->SetValue(NewProp_inputModule2, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlendModule.h"));
				MetaData->SetValue(NewProp_inputModule1, TEXT("ModuleRelativePath"), TEXT("Public/UFNBlendModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNBlendModule(Z_Construct_UClass_UUFNBlendModule, &UUFNBlendModule::StaticClass, TEXT("UUFNBlendModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNBlendModule);
	UClass* Z_Construct_UClass_UUFNConstantModule_NoRegister()
	{
		return UUFNConstantModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNConstantModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNConstantModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNConstantModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNConstantModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNConstantModule(Z_Construct_UClass_UUFNConstantModule, &UUFNConstantModule::StaticClass, TEXT("UUFNConstantModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNConstantModule);
	UClass* Z_Construct_UClass_UUFNScaleBiasModule_NoRegister()
	{
		return UUFNScaleBiasModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNScaleBiasModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNScaleBiasModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_inputModule = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule, UUFNScaleBiasModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNScaleBiasModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNScaleBiasModule.h"));
				MetaData->SetValue(NewProp_inputModule, TEXT("ModuleRelativePath"), TEXT("Public/UFNScaleBiasModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNScaleBiasModule(Z_Construct_UClass_UUFNScaleBiasModule, &UUFNScaleBiasModule::StaticClass, TEXT("UUFNScaleBiasModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNScaleBiasModule);
	UClass* Z_Construct_UClass_UUFNSelectModule_NoRegister()
	{
		return UUFNSelectModule::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNSelectModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNSelectModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_selectModule = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("selectModule"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(selectModule, UUFNSelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule2, UUFNSelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
				UProperty* NewProp_inputModule1 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inputModule1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(inputModule1, UUFNSelectModule), 0x0010000000000000, Z_Construct_UClass_UUFNNoiseGenerator_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNSelectModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNSelectModule.h"));
				MetaData->SetValue(NewProp_selectModule, TEXT("ModuleRelativePath"), TEXT("Public/UFNSelectModule.h"));
				MetaData->SetValue(NewProp_inputModule2, TEXT("ModuleRelativePath"), TEXT("Public/UFNSelectModule.h"));
				MetaData->SetValue(NewProp_inputModule1, TEXT("ModuleRelativePath"), TEXT("Public/UFNSelectModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNSelectModule(Z_Construct_UClass_UUFNSelectModule, &UUFNSelectModule::StaticClass, TEXT("UUFNSelectModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNSelectModule);
	UFunction* Z_Construct_UFunction_UUFNSplineGenerator_AddSpline()
	{
		struct UFNSplineGenerator_eventAddSpline_Parms
		{
			USplineComponent* Spline;
		};
		UObject* Outer=Z_Construct_UClass_UUFNSplineGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddSpline"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(UFNSplineGenerator_eventAddSpline_Parms));
			UProperty* NewProp_Spline = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Spline"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Spline, UFNSplineGenerator_eventAddSpline_Parms), 0x0010000000080080, Z_Construct_UClass_USplineComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("FastNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UFNSplineGenerator.h"));
			MetaData->SetValue(NewProp_Spline, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UUFNSplineGenerator_NoRegister()
	{
		return UUFNSplineGenerator::StaticClass();
	}
	UClass* Z_Construct_UClass_UUFNSplineGenerator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUFNNoiseGenerator();
			Z_Construct_UPackage__Script_UnrealFastNoisePlugin();
			OuterClass = UUFNSplineGenerator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UUFNSplineGenerator_AddSpline());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Splines = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Splines"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Splines, UUFNSplineGenerator), 0x0010008000000008);
				UProperty* NewProp_Splines_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Splines, TEXT("Splines"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_USplineComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UUFNSplineGenerator_AddSpline(), "AddSpline"); // 106102791
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UFNSplineGenerator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UFNSplineGenerator.h"));
				MetaData->SetValue(NewProp_Splines, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Splines, TEXT("ModuleRelativePath"), TEXT("Public/UFNSplineGenerator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UUFNSplineGenerator(Z_Construct_UClass_UUFNSplineGenerator, &UUFNSplineGenerator::StaticClass, TEXT("UUFNSplineGenerator"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UUFNSplineGenerator);
	UPackage* Z_Construct_UPackage__Script_UnrealFastNoisePlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/UnrealFastNoisePlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0xAECB7BB9;
			Guid.B = 0x9871D7D9;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
